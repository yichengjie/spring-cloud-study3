{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'imooc microservice security ';\n  authenticated = false;\n  credentials = {username:'jojo',password:'123'} ;\n  order = {id:'', productId:''}\n\n  constructor(private http: HttpClient){\n      this.http.get('me').subscribe(data => {\n          if (data) {\n              this.authenticated = true;\n          }\n          if (!this.authenticated) {\n              window.location.href = 'http://auth.imooc.com:9090/oauth/authorize?' +\n                  'client_id=admin&' +\n                  'redirect_uri=http://admin.imooc.com:8080/oauth/callback&' +\n                  'response_type=code';\n          }\n      });\n  }\n\n  login(){\n    this.http.post('login', this.credentials).subscribe(()=>{\n       this.authenticated = true ;\n    },()=>{\n        alert('login fail')\n    }) ;\n  }\n  getOrder(){\n    this.http.get('api/order/orders/1').subscribe( (data:any)  =>{\n      this.order = data ;\n    },()=>{\n       alert('get order fail') ;\n    }) ;\n  }\n  logout(){\n    this.http.get(\"logout\").subscribe(()=>{\n       this.authenticated = false ;\n    },()=>{\n       alert('logout fail')\n    })\n  }\n}\n","<div [hidden]=\"!authenticated\" style=\"text-align:center\">\r\n  <h1>\r\n    Welcome to {{ title }}!!\r\n  </h1>\r\n\r\n  <button (click)=\"getOrder()\" type=\"button\" class=\"btn btn-primary\">Get Order Info</button>\r\n  <p>order id : {{order.id}}</p>\r\n  <p>order product id : {{order.productId}}</p>\r\n\r\n  <button (click)=\"logout()\" type=\"button\" class=\"btn btn-primary\">Logout</button>\r\n</div>\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}